externalSecrets:
  secretStoreRef:
    name: vault-argocd
    kind: ClusterSecretStore
  refreshInterval: 1h

  secrets: []
    # Create an external secret (doc: https://external-secrets.io/v0.6.0/api/externalsecret/#example)
    # - name: secret-name # The name of resource (prefixed by fullname)
    #   target: {}
    #   dataFrom: {}

victoria-metrics-k8s-stack:
  # Use shorter names
  fullnameOverride: vm-stack
  prometheus-node-exporter:
    fullnameOverride: node-exporter
  kube-state-metrics:
    fullnameOverride: kube-state-metrics

  victoria-metrics-operator:
    fullnameOverride: victoria-metrics-operator
    operator:
      disable_prometheus_converter: false
      prometheus_converter_add_argocd_ignore_annotations: true
      enable_converter_ownership: true

  # Remove slack things
  alertmanager:
    config:
      route:
        receiver: noop
        routes: []
      receivers:
        - name: noop

    monzoTemplate:
      enabled: false

  # Disable unneeded alert rules
  defaultRules:
    rules:
      etcd: false
      vmcluster: false
      # Disabled because tweaked
      general: false
      kubeApiserverAvailability: false
      kubeApiserverBurnrate: false
      kubeApiserverHistogram: false
      kubeApiserverSlos: false
      kubePrometheusNodeRecording: false
      kubeScheduler: false
      kubeStateMetrics: false
      kubernetesResources: false
      kubernetesSystem: false
      vmhealth: false
      vmagent: false

  ## In k3s alls bellow components is combined in "kubelet"
  kubeControllerManager:
    enabled: false
  kubeScheduler:
    enabled: false
  kubeProxy:
    enabled: false
  kubeApiServer:
    enabled: false
  kubeEtcd:
    enabled: false

  # Disable default grafana dashboards
  defaultDashboardsEnabled: false
  ## Disable embedded grafana for deploy own
  grafana:
    enabled: false

defaultRules:
  create: true
  additionalRuleLabels: {}
  rules:
    # Tweaked rules from "victoria-metrics-k8s-stack" for fully support cluster split and k3s
    victoriametrics:
      general: true
      kubeApiserverAvailability: true
      kubeApiserverBurnrate: true
      kubeApiserverHistogram: true
      kubeApiserverSlos: true
      kubePrometheusNodeRecording: true
      kubeScheduler: true
      kubeStateMetrics: true
      kubernetesResources: true
      kubernetesSystem: true
      vmhealth: true
      vmagent: true


# Grafana dependency chart configuration. For possible values refer to https://github.com/grafana/helm-charts/tree/main/charts/grafana#configuration
grafana:
  enabled: true
  fullnameOverride: grafana

  ## all values for grafana helm chart can be specified here
  sidecar:
    datasources:
      enabled: true
      createVMReplicasDatasources: false
      # JSON options for VM datasources
      # See https://grafana.com/docs/grafana/latest/administration/provisioning/#json-data
      jsonData: {}
      #  timeInterval: "1m"
    dashboards:
      additionalDashboardLabels: {}
      additionalDashboardAnnotations: {}
      enabled: true
      multicluster: true

  ## ForceDeployDatasource Create datasource configmap even if grafana deployment has been disabled
  forceDeployDatasource: false

  ## Configure additional grafana datasources (passed through tpl)
  ## ref: http://docs.grafana.org/administration/provisioning/#datasources
  additionalDataSources: []
  # - name: prometheus-sample
  #   access: proxy
  #   basicAuth: true
  #   basicAuthPassword: pass
  #   basicAuthUser: daco
  #   editable: false
  #   jsonData:
  #       tlsSkipVerify: true
  #   orgId: 1
  #   type: prometheus
  #   url: https://{{ printf "%s-prometheus.svc" .Release.Name }}:9090
  #   version: 1

  dashboardProviders:
    dashboardproviders.yaml:
      apiVersion: 1
      providers:
        - name: "default"
          orgId: 1
          folder: ""
          type: file
          disableDeletion: false
          editable: true
          options:
            path: /var/lib/grafana/dashboards/default

  dashboards:
    default:
      nodeexporter:
        gnetId: 1860
        revision: 22
        datasource: VictoriaMetrics

  defaultDashboardsEnabled: true

  defaultDashboardsTimezone: utc

  ingress:
    enabled: false
    ingressClassName: nginx
    # Values can be templated
    annotations:
      {}
      # kubernetes.io/ingress.class: nginx
      # kubernetes.io/tls-acme: "true"
    labels: {}
    path: /
    # pathType is only for k8s > 1.19
    pathType: Prefix

    hosts:
      - grafana.domain.com
    ## Extra paths to prepend to every host configuration. This is useful when working with annotation based services.
    extraPaths: []
    # - path: /*
    #   pathType: Prefix
    #   backend:
    #     service:
    #       name: ssl-redirect
    #       port:
    #         name: service
    tls: []
    #  - secretName: grafana-ingress-tls
    #    hosts:
    #      - grafana.domain.com

  vmServiceScrape:
    # wheter we should create a service scrape resource for grafana
    enabled: true

    # spec for VMServiceScrape crd
    # https://docs.victoriametrics.com/operator/api.html#vmservicescrapespec
    spec: {}
