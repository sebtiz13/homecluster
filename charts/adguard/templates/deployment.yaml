apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "adguard.fullname" . }}
  labels:
    {{- include "adguard.labels" . | nindent 4 }}
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      {{- include "adguard.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "adguard.selectorLabels" . | nindent 8 }}
    spec:
      {{- if .Values.hostNetwork.enabled }}
      hostNetwork: true
      dnsPolicy: ClusterFirstWithHostNet
      {{- end }}
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "adguard.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      {{- if .Values.bootstrapConfig }}
      initContainers:
        - image: "{{ .Values.images.configurator.repository }}:{{ .Values.images.configurator.tag | default "latest" }}"
          name: configurator
          imagePullPolicy: {{ .Values.images.configurator.pullPolicy }}
          resources:
            limits:
              cpu: 100m
              memory: 128Mi
            requests:
              cpu: 100m
              memory: 64Mi
          volumeMounts:
            - name: bootstrap-config-vol
              mountPath: /var/adguardhome-bootstrap
            - name: data-vol
              mountPath: /opt/adguardhome/conf
              subPath: conf
          command:
            - /bin/sh
            - "-c"
            - |
              FILE=/opt/adguardhome/conf/AdGuardHome.yaml
              if [ -f "$FILE" ]; then
                echo "Existing file will NOT be altered: $FILE"
              else
                cp -v /var/adguardhome-bootstrap/AdGuardHome.yaml "$FILE"
              fi
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.images.adguard.repository }}:{{ .Values.images.adguard.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.images.adguard.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.bootstrapConfig.bind_port }}
              {{- if .Values.hostNetwork.enabled }}
              hostPort: {{ .Values.bootstrapConfig.bind_port }}
              {{- end }}
              protocol: TCP
            - name: dns-tcp
              containerPort: {{ .Values.bootstrapConfig.dns.port }}
              {{- if .Values.hostNetwork.enabled }}
              hostPort: {{ .Values.bootstrapConfig.dns.port }}
              {{- end }}
              protocol: TCP
            - name: dns-udp
              containerPort: {{ .Values.bootstrapConfig.dns.port }}
              {{- if .Values.hostNetwork.enabled }}
              hostPort: {{ .Values.bootstrapConfig.dns.port }}
              {{- end }}
              protocol: UDP
            {{- if .Values.bootstrapConfig.tls.enabled }}
            - name: https
              containerPort: {{ .Values.bootstrapConfig.tls.port_https }}
              {{- if .Values.hostNetwork.enabled }}
              hostPort: {{ .Values.bootstrapConfig.tls.port_https }}
              {{- end }}
              protocol: TCP
            - name: https-udp
              containerPort: {{ .Values.bootstrapConfig.tls.port_https }}
              {{- if .Values.hostNetwork.enabled }}
              hostPort: {{ .Values.bootstrapConfig.tls.port_https }}
              {{- end }}
              protocol: UDP
            {{- if .Values.bootstrapConfig.tls.port_dns_over_tls }}
            - name: dns-over-tls
              containerPort: {{ .Values.bootstrapConfig.tls.port_dns_over_tls }}
              {{- if .Values.hostNetwork.enabled }}
              hostPort: {{ .Values.bootstrapConfig.tls.port_dns_over_tls }}
              {{- end }}
              protocol: TCP
            {{- end }}
            {{- if .Values.bootstrapConfig.tls.port_dns_over_quic }}
            - name: dns-over-quic
              containerPort: {{ .Values.bootstrapConfig.tls.port_dns_over_quic }}
              {{- if .Values.hostNetwork.enabled }}
              hostPort: {{ .Values.bootstrapConfig.tls.port_dns_over_quic }}
              {{- end }}
              protocol: UDP
            {{- end }}
            {{- if .Values.bootstrapConfig.tls.port_dnscrypt }}
            - name: dnscrypt
              containerPort: {{ .Values.bootstrapConfig.tls.port_dnscrypt }}
              {{- if .Values.hostNetwork.enabled }}
              hostPort: {{ .Values.bootstrapConfig.tls.port_dnscrypt }}
              {{- end }}
              protocol: TCP
            - name: dnscrypt-udp
              containerPort: {{ .Values.bootstrapConfig.tls.port_dnscrypt }}
              {{- if .Values.hostNetwork.enabled }}
              hostPort: {{ .Values.bootstrapConfig.tls.port_dnscrypt }}
              {{- end }}
              protocol: UDP
            {{- end }}
            {{- end }}
            {{- if and .Values.hostNetwork.enabled .Values.bootstrapConfig.dhcp.enabled }}
            - name: dhcp
              containerPort: 67
              hostPort: 67
              protocol: TCP
            {{- end }}
          {{- if .Values.livenessProbe.enabled }}
          livenessProbe:
            exec:
              command:
                - /bin/sh
                - -c
                - /bin/netstat -pant | /bin/grep {{ .Values.livenessProbe.port }}
            initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.livenessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.livenessProbe.timeoutSeconds }}
            failureThreshold: {{ .Values.livenessProbe.failureThreshold }}
          {{- end }}
          volumeMounts:
            - name: data-vol
              mountPath: /opt/adguardhome/work
              subPath: work
            - name: data-vol
              mountPath: /opt/adguardhome/conf
              subPath: conf
            {{- if and .Values.dnsOverTls.secretName .Values.dnsOverTls.mountPath }}
            - name: certificate
              mountPath: {{ .Values.dnsOverTls.mountPath }}
            {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      volumes:
        {{- if .Values.bootstrapConfig }}
        - name: bootstrap-config-vol
          secret:
            secretName: {{ include "adguard.fullname" . }}
        {{- end }}
        - name: data-vol
          {{- if .Values.persistence.enabled }}
          persistentVolumeClaim:
            claimName: {{ include "adguard.fullname" . }}
          {{- else }}
          emptyDir: {}
          {{- end }}
        {{- if and .Values.dnsOverTls.secretName .Values.dnsOverTls.mountPath }}
        - name: certificate
          secret:
            secretName: {{ .Values.dnsOverTls.secretName }}
        {{- end }}
