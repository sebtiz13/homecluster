# Overrides name template
nameOverride: ""
# Overrides fullname template
fullnameOverride: ""

external-secrets:
  fullnameOverride: config-syncer

config-syncer:
  fullnameOverride: config-syncer

  # Number of Config Syncer operator replicas to create (only 1 is supported)
  replicaCount: 1

  image:
    repository: ghcr.io/appscode/config-syncer
    # tag: ""
    pullPolicy: IfNotPresent

  # Compute Resources required by the operator container
  resources: {}
  # Security options this container should run with
  securityContext: # +doc-gen:break
    allowPrivilegeEscalation: false
    capabilities:
      drop: ["ALL"]
    readOnlyRootFilesystem: true
    runAsNonRoot: true
    runAsUser: 65534
    seccompProfile:
      type: RuntimeDefault

  # Specify an array of imagePullSecrets.
  # Secrets must be manually created in the namespace.
  #
  # Example:
  # helm template charts/config-syncer \
  #   --set imagePullSecrets[0].name=sec0 \
  #   --set imagePullSecrets[1].name=sec1
  imagePullSecrets: []

  # If true, installs Config Syncer operator as critical addon
  criticalAddon: false

  # Log level for operator
  logLevel: 3

  # Annotations applied to operator deployment
  annotations: {}

  # Annotations passed to operator pod(s).
  podAnnotations: {}

  # Node labels for pod assignment
  nodeSelector: {}

  # Tolerations for pod assignment
  tolerations: []

  # Affinity rules for pod assignment
  affinity: {}

  # Security options the operator pod should run with.
  podSecurityContext: # +doc-gen:break
    # ensure that s/a token is readable xref: https://issues.k8s.io/70679
    fsGroup: 65535

  serviceAccount:
    # Specifies whether a service account should be created
    create: true
    # Annotations to add to the service account
    annotations: {}
    # The name of the service account to use.
    # If not set and create is true, a name is generated using the fullname template
    name: ""

  apiserver:
    # Port used by Config Syncer server
    securePort: "8443"
    # If true, uses kube-apiserver FQDN for AKS cluster to workaround https://github.com/Azure/AKS/issues/522 (default true)
    useKubeapiserverFqdnForAks: true
    healthcheck:
      # healthcheck configures the readiness and liveliness probes for the operator pod.
      enabled: false
    servingCerts:
      # If true, generates on install/upgrade the certs that allow the kube-apiserver (and potentially ServiceMonitor)
      # to authenticate operators pods. Otherwise specify certs in `apiserver.servingCerts.{caCrt, serverCrt, serverKey}`.
      generate: true
      # CA certficate used by serving certificate of Config Syncer server.
      caCrt: ""
      # Serving certficate used by Config Syncer server.
      serverCrt: ""
      # Private key for the serving certificate used by Config Syncer server.
      serverKey: ""

  # If true, sends usage analytics
  enableAnalytics: true

  config:
    # Set cluster-name to something meaningful to you, say, prod, prod-us-east, qa, etc.
    # so that you can distinguish notifications sent by config-syncer
    clusterName: unicorn
    # If set, configmaps and secrets from only this namespace will be synced
    configSourceNamespace: ""
    # Name of an existing secret resource containing the config
    existingSecret: ""
    # kubeconfig file content for configmap and secret syncer
    kubeconfigContent: ""
    # Name of an existing secret key containing the kubeconfig content
    existingSecretKubeconfigKey: ""
    additionalOptions: []
    # - --authentication-skip-lookup
