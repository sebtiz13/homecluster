{{- $forgejoVals := dict "Values" .Values.forgejo "Chart" .Chart "Release" .Release -}}
apiVersion: v1
kind: Secret
metadata:
  name: {{ include "gitea.fullname" $forgejoVals }}-init-runner
  labels:
    {{- include "gitea.labels" $forgejoVals | nindent 4 }}
type: Opaque
stringData:
  generate_token.sh: |-
    #!/usr/bin/env bash

    set -euo pipefail

    status=0

    if [ -f /data/.runner ];
    then
      echo 'Runner seems to already be configured. We are not creating a new token.'
    else
      echo 'Generating runner secret...'
      forgejo forgejo-cli actions generate-secret > /tmp/runner-secret || {
        echo 'Failed to write secret to /tmp/runner-secret!'
        exit 1
      }

    # try
    {
      echo 'Registering generated secret...'
      forgejo forgejo-cli actions register \
        --secret-file /tmp/runner-secret \
        --config /data/gitea/conf/app.ini
    } ||
    # catch
    {
      echo 'Failed to register!'
      status=1
    }
    fi

    exit $status

  configure_runner.sh: |-
    #!/bin/ash

    set -euo pipefail

    echo '==== BEGIN RUNNER CONFIGURATION ===='

    if [ -f /data/.runner ];
    then
      echo 'Runner seems to already be configured. We are not creating a new token.'
    else
      forgejo-runner create-runner-file \
        --secret $(cat /tmp/runner-secret) \
        --instance http://{{ .Release.Name }}-http.{{ .Release.Namespace }}.svc.cluster.local:{{ .Values.forgejo.service.http.port }}

      echo 'Moving runner file to /data directory'

      mv /.runner /data/.runner

      echo 'Creating symlink from /data/.runner to /.runner'

      ln -sf /data/.runner /.runner
    fi

    echo '====  END RUNNER CONFIGURATION  ===='
