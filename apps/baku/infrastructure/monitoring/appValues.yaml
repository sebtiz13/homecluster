victoria-metrics-k8s-stack:
  # victoria-metrics-operator: # TODO: fix that when have better serviceaccount stuff
  #   watchNamespace: {{ .Values.destination.namespace | quote }}

  vmsingle:
    ingress:
      enabled: true
      ingressClassName: traefik
      annotations:
        traefik.ingress.kubernetes.io/router.middlewares: traefik-auth-vm@kubernetescrd # NOTE: managed by ansible
        traefik.ingress.kubernetes.io/router.entrypoints: monitoring
      hosts:
        - {{ include "ingress.host" . }}
      tls:
        - hosts:
            - {{ include "ingress.host" . }}
    spec:
      storage:
        resources:
          requests:
            storage: 20Gi

  vmagent:
    spec:
      externalLabels:
        cluster: baku

  alertmanager:
    spec:
      configSecret: monitoring.alertmanager

    templateFiles:
      discord.tmpl: |-
        {{- .Values.alertmanager.discordTemplate | replace "$" "$$" | nindent 8 }}

grafana:
  ingress:
    enabled: true
    ingressClassName: traefik
    annotations:
      {{ include "ingress.annotations.httpsRedirect" . | nindent 8 }}
    hosts:
      - {{ include "ingress.host" . }}
    tls:
      - hosts:
          - {{ include "ingress.host" . }}

  dashboardProviders:
    dashboardproviders.yaml:
      apiVersion: 1
      providers:
        - name: "default"
          orgId: 1
          folder: ""
          type: file
          disableDeletion: false
          editable: true
          options:
            path: /var/lib/grafana/dashboards/default
        - name: "kubernetes"
          orgId: 1
          folder: "Kubernetes"
          type: file
          disableDeletion: false
          editable: true
          options:
            path: /var/lib/grafana/dashboards/kubernetes
        - name: "victoriametrics"
          orgId: 1
          folder: "VictoriaMetrics"
          type: file
          disableDeletion: false
          editable: true
          options:
            path: /var/lib/grafana/dashboards/victoriametrics
  dashboards:
    {{- $dashboard_base_url := printf "https://gitlab.com/sebtiz13-cluster/homecluster/-/raw/%s/grafana_dashboards/" .Values.grafana.dashboardsReleaseBranch }}
    {{- range $provider, $dashboards := .Values.grafana.dashboards }}
    {{ $provider }}:
      {{- range $key, $value := $dashboards }}
      {{- if $value }}
      {{ $key }}:
        {{- if eq $provider "default" }}
        url: {{ printf "%s%s.json" $dashboard_base_url $key }}
        {{- else }}
        url: {{ printf "%s%s/%s.json" $dashboard_base_url $provider $key  }}
        {{- end }}
      {{- end }}
      {{- end }}
    {{- end }}

  admin:
    existingSecret: monitoring-credentials
    userKey: admin-user
    passwordKey: admin-password

  grafana.ini:
    feature_toggles:
      accessTokenExpirationCheck: true
    server:
      domain: {{ include "ingress.host" . }}
      root_url: https://{{ include "ingress.host" . }}/

    auth:
      signout_redirect_url: '{{ printf "$__file{/etc/secrets/auth_generic_oauth/issuer}/oidc/v1/end_session?client_id=$__file{/etc/secrets/auth_generic_oauth/clientID}&post_logout_redirect_uri=https://%s/login" (include "ingress.host" .) }}'
    auth.generic_oauth:
      enabled: true
      name: Zitadel
      allow_sign_up: true
      client_id: $__file{/etc/secrets/auth_generic_oauth/clientID}
      client_secret: $__file{/etc/secrets/auth_generic_oauth/clientSecret}
      auth_url: $__file{/etc/secrets/auth_generic_oauth/issuer}/oauth/v2/authorize
      token_url: $__file{/etc/secrets/auth_generic_oauth/issuer}/oauth/v2/token
      api_url: $__file{/etc/secrets/auth_generic_oauth/issuer}/oidc/v1/userinfo
      scopes: openid email profile offline_access groups
      login_attribute_path: email
      name_attribute_path: preferred_username
      role_attribute_path: "contains(groups[*], 'Admin') && 'Admin' || contains(groups[*], 'Operator') && 'Editor' || 'Viewer'"

  extraSecretMounts:
    - name: auth-generic-oauth-secret-mount
      secretName: monitoring-oidc-credentials
      defaultMode: 0440
      mountPath: /etc/secrets/auth_generic_oauth
      readOnly: true

  persistence:
    enabled: true
    size: 5Gi

  resources:
    requests:
      cpu: 250m
      memory: 750Mi
    limits:
      cpu: 500m
      memory: 1500Mi

external-secrets:
  secrets:
    - name: credentials
      target:
        template:
          type: Opaque
          data:
            admin-user: '{{`{{ .adminUser }}`}}'
            admin-password: '{{`{{ .adminPassword }}`}}'
      dataFrom:
        - extract:
            key: baku/grafana/auth
    - name: oidc-credentials
      dataFrom:
        - extract:
            key: baku/grafana/oidc
    - name: alertmanager
      target:
        template:
          type: Opaque
          data:
            alertmanager.yaml: |
              route:
                receiver: noop
                routes:
                  - match:
                      alertname: 'CPUThrottlingHigh'
                    receiver: noop
                  - matchers:
                    - severity=~"info|warning|critical"
                    group_by: ["alertgroup", "job", "cluster"]
                    receiver: discord
              receivers:
                - name: noop
                - name: discord
                  discord_configs:
                    - webhook_url: '{{`{{"{{ .discord }}"}}`}}'
                      title: '{{`{{"{{ printf ''{{ template \"homecluster.discord.title\" . }}'' }}"}}'
                      message: '{{`{{"{{ printf ''{{ template \"homecluster.discord.message\" . }}'' }}`}}'
      dataFrom:
        - extract:
            key: baku/monitoring/alertmanager
    {{- if eq .Values.environment "dev" }}
    - name: vm-ca-tls
      target:
        template:
          type: kubernetes.io/tls
          data:
            tls.crt: '{{`{{"{{ .crt }}"}}`}}'
            tls.key: '{{`{{"{{ .key }}"}}`}}'
      dataFrom:
        - extract:
            key: salamandre/tls/vm-ca
    {{ end -}}
