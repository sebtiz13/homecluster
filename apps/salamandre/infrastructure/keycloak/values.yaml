plugin: argocd-vault-plugin-helm

ingress:
  subdomain: sso

source:
  repoURL: https://charts.bitnami.com/bitnami
  chart: keycloak
  targetRevision: 10.1.4

destination:
  namespace: keycloak

syncPolicy:
  automated:
    prune: true
    selfHeal: true

# App Values
realm:
  id: developer
  realm: developer
  enabled: true
  registrationAllowed: false
  registrationEmailAsUsername: false
  attributes:
    frontendUrl: https://{{ include "ingress.host" . }}

  roles:
    realm:
      - name: editor
        composite: false
        clientRole: false
        containerId: developer
      - name: admin
        description: "$${role_admin}"
        composite: true
        composites:
          client:
            realm-management:
              - realm-admin
        clientRole: false
        containerId: developer

  groups:
    - name: Admin
      path: /Admin
      attributes:
        policy:
          - consoleAdmin
      realmRoles:
        - editor
        - admin
    - name: Operator
      path: /Operator
      attributes:
        policy:
          - readwrite
      realmRoles:
        - editor
    - name: Users
      path: /Users

  clients:
    - name: argoCD
      clientId: <path:salamandre/data/argocd/oidc#clientID>
      rootUrl: https://argocd.{{ .Values.baseDomain }}
      baseUrl: /
      enabled: true
      publicClient: false
      clientAuthenticatorType: client-secret
      secret: <path:salamandre/data/argocd/oidc#clientSecret>
      redirectUris:
        - /
        - /applications
        - /auth/callback
      webOrigins:
        - /ui/vault/auth
      standardFlowEnabled: true
      directAccessGrantsEnabled: true
      protocol: openid-connect
      attributes:
        backchannel.logout.session.required: "true"
      fullScopeAllowed: true
      defaultClientScopes:
        - web-origins
        - profile
        - roles
        - groups
        - email
      optionalClientScopes:
        - address
        - phone
        - offline_access
        - microprofile-jwt
    - name: argoCD CLI
      clientId: <path:salamandre/data/argocd/oidc#cliClientID>
      rootUrl: http://localhost:8085
      adminUrl: http://localhost:8085
      enabled: true
      clientAuthenticatorType: client-secret
      redirectUris:
        - http://localhost:8085/*
      webOrigins:
        - http://localhost:8085
      standardFlowEnabled: true
      directAccessGrantsEnabled: true
      publicClient: true
      protocol: openid-connect
      attributes:
        backchannel.logout.session.required: "true"
      fullScopeAllowed: true
      defaultClientScopes:
        - web-origins
        - profile
        - roles
        - groups
        - email
      optionalClientScopes:
        - address
        - phone
        - offline_access
        - microprofile-jwt
    - name: vault
      clientId: <path:salamandre/data/vault/oidc#clientID>
      rootUrl: https://vault-secrets.{{ .Values.baseDomain }}
      baseUrl: /ui/
      adminUrl: /ui/vault/auth/oidc/oidc/callback
      enabled: true
      publicClient: false
      clientAuthenticatorType: client-secret
      secret: <path:salamandre/data/vault/oidc#clientSecret>
      redirectUris:
        - /oidc/callback
        - /ui/vault/auth/oidc/oidc/callback/*
        - http://localhost:8250/oidc/callback
      webOrigins:
        - /ui/vault/auth
      standardFlowEnabled: true
      directAccessGrantsEnabled: true
      protocol: openid-connect
      attributes:
        backchannel.logout.session.required: "true"
        post.logout.redirect.uris: https://vault-secrets.{{ .Values.baseDomain }}
      fullScopeAllowed: true
      defaultClientScopes:
        - web-origins
        - profile
        - roles
        - groups
        - email
      optionalClientScopes:
        - address
        - phone
        - offline_access
        - microprofile-jwt
    - name: gitlab
      clientId: <path:salamandre/data/gitlab/oidc#clientID>
      rootUrl: https://git.{{ .Values.baseDomain }}
      baseUrl: /
      enabled: true
      publicClient: false
      clientAuthenticatorType: client-secret
      secret: <path:salamandre/data/vault/oidc#clientSecret>
      redirectUris:
        - /*
      webOrigins:
        - '*'
      standardFlowEnabled: true
      directAccessGrantsEnabled: true
      protocol: openid-connect
      attributes:
        backchannel.logout.session.required: "true"
      fullScopeAllowed: true
      defaultClientScopes:
        - web-origins
        - profile
        - roles
        - email
      optionalClientScopes:
        - address
        - phone
        - offline_access
        - microprofile-jwt


  clientScopes:
    - name: groups
      protocol: openid-connect
      attributes:
        include.in.token.scope: "true"
        display.on.consent.screen: "true"
      protocolMappers:
        - name: groups
          protocol: openid-connect
          protocolMapper: oidc-group-membership-mapper
          consentRequired: false
          config:
            full.path: "false"
            id.token.claim: "true"
            access.token.claim: "true"
            claim.name: groups
            userinfo.token.claim: "true"
    - name: policies
      protocol: openid-connect
      attributes:
        include.in.token.scope: "true"
        display.on.consent.screen: "true"
      protocolMappers:
        - name: policy
          protocol: openid-connect
          protocolMapper: oidc-usermodel-attribute-mapper
          consentRequired: false
          config:
            userinfo.token.claim: "true"
            user.attribute: policy
            id.token.claim: "true"
            access.token.claim: "true"
            claim.name: policy
            jsonType.label: String
