{{- define "argocd.avp" }}
---
apiVersion: argoproj.io/v1alpha1
kind: ConfigManagementPlugin
metadata:
  name: argocd-vault-plugin-helm
spec:
  version: "v{{ .Values.toolsVersion.avp }}"
  allowConcurrency: true
  lockRepo: false
  init:
    command: [sh, -c, 'helm dependency update']
  generate:
    command:
      - sh
      - -c
      - |
        echo "$$ARGOCD_ENV_HELM_VALUES" > extra.values.yaml &&
        helm template $${ARGOCD_ENV_HELM_RELEASE_NAME:-$${ARGOCD_APP_NAME}} --include-crds -n $$ARGOCD_APP_NAMESPACE $$ARGOCD_ENV_HELM_ARGS -f extra.values.yaml . |
        argocd-vault-plugin generate -'
  discover:
    find:
      command:
        - sh
        - "-c"
        - "find . -name 'Chart.yaml' && find . -name 'values.yaml'"
{{- end -}}

fullnameOverride: "argocd"

global:
  logging:
    level: debug

server:
  {{/* Environment variables to pass to argocd-server */}}
  env:
    - name: TZ
      value: Europe/Paris

  ingress:
    enabled: true
    ingressClassName: traefik
    annotations:
      {{ include "ingress.annotations.httpsRedirect" . | nindent 6 }}
    hosts:
      - {{ include "ingress.host" . }}
    tls:
      - secretName: {{ include "ingress.tls.secretName" . }}
        hosts:
          - {{ include "ingress.host" . }}

  config:
    url: https://{{ include "ingress.host" . }}

    oidc.config: |
      {{ tpl (.Values.baseOidcConfig | toYaml) . | nindent 6  }}

  rbacConfig:
    policy.csv: |
      g, Admin, role:admin
    policy.default: role:readonly

repoServer:
  {{/* Environment variables to pass to argocd-repo-server */}}
  env:
    - name: TZ
      value: Europe/Paris
    - name: VAULT_ADDR
      value: {{ .Values.vaultURL | quote }}
    - name: AVP_TYPE
      value: vault
    - name: AVP_AUTH_TYPE
      value: k8s
    - name: AVP_K8S_ROLE
      value: argocd

  rbac:
    - apiGroups:
        - ""
      resources:
        - secrets
        - configmaps
      verbs:
        - get
        - list
        - watch

  volumes:
    - configMap:
        name: cmp-plugin
      name: cmp-plugin
    - emptyDir: {}
      name: cmp-tmp

    - name: custom-tools
      emptyDir: {}

  initContainers:
    - name: download-tools
      image: alpine
      command: [sh, -c]
      securityContext:
        runAsNonRoot: true
        runAsUser: 999
      env:
        - name: AVP_VERSION
          value: {{ .Values.toolsVersion.avp | quote }}
        - name: VAULT_VERSION
          value: {{ .Values.toolsVersion.vault | quote }}
      args:
        - |-
          cd $(mktemp -d)
          echo "Install Vault plugin"
          wget -qO /custom-tools/argocd-vault-plugin https://github.com/argoproj-labs/argocd-vault-plugin/releases/download/v$${AVP_VERSION}/argocd-vault-plugin_$${AVP_VERSION}_linux_amd64
          echo "Install Vault cli"
          wget -qO ./vault.zip https://releases.hashicorp.com/vault/$${VAULT_VERSION}/vault_$${VAULT_VERSION}_linux_amd64.zip && unzip ./vault.zip -d /custom-tools
          # Correct permissions
          chmod +x /custom-tools/*
      volumeMounts:
        - mountPath: /custom-tools
          name: custom-tools

  extraContainers:
    - name: avp-helm
      command: [/var/run/argocd/argocd-cmp-server]
      image: quay.io/argoproj/argocd:v{{ .Values.argocdVersion }}
      securityContext:
        runAsNonRoot: true
        runAsUser: 999
      volumeMounts:
        - mountPath: /var/run/argocd
          name: var-files
        - mountPath: /home/argocd/cmp-server/plugins
          name: plugins
        - mountPath: /tmp
          name: cmp-tmp
        # Register plugins into sidecar
        - mountPath: /home/argocd/cmp-server/config/plugin.yaml
          subPath: avp-helm.yaml
          name: argocd-cmp-plugin
        # Important: Mount tools into $PATH
        - name: custom-tools
          subPath: argocd-vault-plugin
          mountPath: /usr/local/bin/argocd-vault-plugin

  volumeMounts:
    - name: custom-tools
      mountPath: /custom-tools
    - name: custom-tools
      mountPath: /usr/local/bin/argocd-vault-plugin
      subPath: argocd-vault-plugin

configs:
  secret:
    extra:
      oidc.keycloak.clientSecret: <path:salamandre/data/argocd/oidc#clientSecret>

  params:
    server.insecure: true

  repositories:
    sebtiz13-repo:
      url: {{ printf "https://gitlab.com/api/v4/projects/%s/packages/helm/stable" .Values.gitlabProjectID | quote  }}
      type: helm
    {{- if ne .Values.environment "prod" }}
    sebtiz13-devel-repo:
      url: {{ printf "https://gitlab.com/api/v4/projects/%s/packages/helm/devel" .Values.gitlabProjectID | quote }}
      type: helm
    {{- end -}}

{{/* Disable not used services */}}
dex:
  enabled: false
applicationSet:
  enabled: false
notifications:
  enabled: false

extraObjects:
  - apiVersion: v1
    kind: ConfigMap
    metadata:
      name: argocd-cmp-plugin
    data:
      avp-helm.yaml: |-
        {{ include "argocd.avp" . | trim | nindent 8 }}
{{- range .Values.projects }}
  - apiVersion: argoproj.io/v1alpha1
    kind: AppProject
    metadata:
      name: {{ .name | quote }}
    spec:
      description: {{ .description | quote }}
      sourceRepos:
        {{- toYaml .sourceRepos | nindent 8 }}
      destinations:
        {{- toYaml .destinations | nindent 8 }}
      {{- with .clusterResourceWhitelist }}
      clusterResourceWhitelist:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .clusterResourceBlacklist }}
      clusterResourceBlacklist:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .namespaceResourceBlacklist }}
      namespaceResourceBlacklist:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .namespaceResourceWhitelist }}
      namespaceResourceWhitelist:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .orphanedResources }}
      orphanedResources:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .roles }}
      roles:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .syncWindows }}
      syncWindows:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .signatureKeys }}
      signatureKeys:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{ end -}}
