- name: Fill salamandre applications secrets
  no_log: true
  ansible.builtin.uri:
    url: "{{ vault_api_url }}/{{ item.path }}"
    method: POST
    status_code:
      - 204 # When successfull
      - 200 # When warning
    body_format: json
    headers:
      X-Vault-Token: "{{ vault_root_token }}"
    body:
      data: "{{ item.data }}"
  loop_control:
    label: "{{ item.path }}"
  loop:
    # ? DB access is is ./s_apps_db_access.yaml
    # Weave-Gitops
    - path: salamandre/data/k8s-dashboard/auth
      data:
        adminUser: admin
        adminPassword: "{{ admin_passwords.k8s_dashboard }}"
    # Forgejo
    - path: salamandre/data/forgejo/auth
      data:
        adminUser: root
        adminPassword: "{{ admin_passwords.salamandre.forgejo }}"
    - path: salamandre/data/forgejo/runner
      data:
        token: "{{ lookup('file', credentials_folder + '/forgejo_runner_token') }}"
    # Minio
    - path: salamandre/data/minio/auth
      data:
        rootUser: admin
        rootPassword: "{{ admin_passwords.salamandre.minio }}"
    # Nextcloud
    - path: salamandre/data/nextcloud/auth
      data:
        adminUser: admin
        adminPassword: "{{ admin_passwords.salamandre.nextcloud }}"
        collaboraAdminUser: admin
        collaboraAdminPassword: "{{ admin_passwords.salamandre.collabora }}"
    # Vaultwarden
    - path: salamandre/data/vaultwarden/auth
      data:
        adminUser: admin
        adminPassword: "{{ admin_passwords.salamandre.vaultwarden }}"

- name: Fill baku applications secrets
  no_log: true
  when: "(ansible_limit is not defined) or ('baku' in ansible_limit)"
  ansible.builtin.uri:
    url: "{{ vault_api_url }}/{{ item.path }}"
    method: POST
    status_code:
      - 204 # When successfull
      - 200 # When warning
    body_format: json
    headers:
      X-Vault-Token: "{{ vault_root_token }}"
    body:
      data: "{{ item.data }}"
  loop_control:
    label: "{{ item.path }}"
  loop:
    # Salamandre backup
    - path: salamandre/data/backup/s3
      data:
        endpoint: "{{ external_urls.baku_minio }}"
        region: minio
        accessKey: salamandre-backup
        secretKey: "{{ lookup('ansible.builtin.password', '/dev/null', chars=['ascii_letters', 'digits'], length=40) }}"
        bucketBarman: backup-cluster-barman
        bucketPvc: backup-cluster-pvc
    # Minio
    - path: baku/data/minio/auth
      data:
        rootUser: admin
        rootPassword: "{{ admin_passwords.baku.minio }}"
    # Monitoring
    - path: baku/data/monitoring/auth
      data:
        vmsingleUser: vmsingle
        vmsinglePassword: "{{ lookup('ansible.builtin.password', '/dev/null', chars=['ascii_letters', 'digits']) }}"
    # Grafana
    - path: baku/data/grafana/auth
      data:
        adminUser: admin
        adminPassword: "{{ admin_passwords.baku.grafana }}"
