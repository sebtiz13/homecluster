- name: External-secrets | Retrieve application informations
  vars:
    manifest: "{{ lookup('file', manifests_folder + '/external-secrets.yaml') | from_yaml }}"
  ansible.builtin.set_fact:
    apps_external_secrets:
      release_name: "{{ manifest.spec.source.helm.releaseName }}"
      namespace: "{{ manifest.spec.destination.namespace }}"

- name: External-secrets | Deploy manifest
  kubernetes.core.k8s:
    kubeconfig: "{{ local_kubeconfig }}"
    state: present
    src: "{{ manifests_folder }}/external-secrets.yaml"
    namespace: "{{ argocd_namespace }}"

- name: External-secrets | Wait until is started
  kubernetes.core.k8s_info:
    kubeconfig: "{{ local_kubeconfig }}"
    kind: Deployment
    name: "{{ apps_external_secrets.release_name }}"
    namespace: "{{ apps_external_secrets.namespace }}"
    wait: true
    wait_sleep: 10
    wait_timeout: 360

- name: External-secrets | Configure kubernetes role in Vault
  vars:
    vault_role_name: external-secrets
    existing_roles: "{{ (vault_k8s_role.data | default({})) | community.general.json_query('data.keys') }}"
  when: "('data' not in vault_k8s_role) or (vault_role_name not in existing_roles)"
  community.hashi_vault.vault_write:
    url: "{{ ansible_hashi_vault_addr }}"
    validate_certs: false
    token: "{{ ansible_hashi_vault_token }}"
    path: "auth/kubernetes/role/{{ vault_role_name }}"
    data:
      bound_service_account_names: "{{ apps_external_secrets.release_name }}"
      bound_service_account_namespaces: "{{ apps_external_secrets.namespace }}"
      policies: argocd
      ttl: 1h

# TODO: Move it to "apps/"
- name: External-secrets | Configure cluster store
  vars:
    store_name: vault-eso
    vault_url: "http://{{ apps_vault.release_name }}-internal.{{ apps_vault.namespace }}.svc:8200"
    vault_role_name: external-secrets
  kubernetes.core.k8s:
    kubeconfig: "{{ local_kubeconfig }}"
    state: present
    namespace: "{{ apps_external_secrets.namespace }}"
    template: s_es_store.yaml.j2
