- name: Load informations and configure salamandre core applications
  hosts: salamandre
  tags: kubernetes
  pre_tasks:
    - name: Load applications admin passwords # TODO: use ansible vault ?
      ansible.builtin.include_vars:
        file: "{{ credentials_folder }}/admin_passwords.yaml"
        name: admin_passwords

    - name: Store applications informations
      ansible.builtin.set_fact:
        # vault_api_url: "" # Defined in roles/apps_vault/tasks/auth.yaml
        # vault_root_token: "" # Defined in roles/apps_vault/tasks/auth.yaml
        # zitadel_internal_url: "" # Defined in roles/apps_zitadel/tasks/auth.yaml
        # zitadel_console_token: "" # Defined in roles/apps_zitadel/tasks/auth.yaml
        apps_vault:
          release_name: vault
          namespace: vault
          pod_name: vault-0
          keys_secret_name: vault-keys
          store_name: vault-eso
        apps_zitadel:
          release_name: zitadel
          namespace: zitadel
          domain_name: "{{ external_urls.zitadel | replace('https://', '') }}"
  roles:
    - role: apps_vault
      tags: vault
  post_tasks:
    - name: Vault | Fill applications secrets
      ansible.builtin.import_tasks: tasks/s_core_apps_secrets.yaml

    - name: Wait until database is ready
      delegate_to: localhost
      kubernetes.core.k8s_info:
        kubeconfig: "{{ local_kubeconfig }}"
        kind: Pod
        namespace: database
        name: "postgres{{ postgres_version }}-1"
        wait: true
        wait_timeout: 300

    - name: Zitadel | Setup zitadel
      tags: zitadel
      ansible.builtin.import_role:
        name: apps_zitadel

- name: Configure applications
  hosts: salamandre
  tags: kubernetes
  pre_tasks:
    - name: Vault | Authenticate console
      when: "'vault' in ansible_skip_tags"
      ansible.builtin.import_tasks: roles/apps_vault/tasks/auth.yaml
    - name: Zitadel | Authenticate console
      when: "'zitadel' in ansible_skip_tags"
      ansible.builtin.import_tasks: roles/apps_zitadel/tasks/auth.yaml
  tasks:
    - name: Configure vault oidc
      tags:
        - vault
        - oidc
      ansible.builtin.import_role:
        name: vault_oidc

    - name: Vault | Fill salamandre applications secrets
      ansible.builtin.import_tasks: tasks/s_apps/secrets.yaml
    - name: Database | Create applications access
      ansible.builtin.import_tasks: tasks/s_apps/databases.yaml
    - name: Zitadel (OIDC) | Create applications access
      ansible.builtin.import_tasks: tasks/s_apps/oidc.yaml

    - name: Vault | Fill baku applications secrets
      when: "(ansible_limit is not defined) or ('baku' in ansible_limit)"
      ansible.builtin.import_tasks: tasks/b_apps/secrets.yaml

    - name: Register forgejo runner
      tags: forgejo
      delegate_to: localhost
      ansible.builtin.import_tasks: tasks/s_forgejo_runner.yaml

- name: Configure baku applications
  hosts: baku
  tags: kubernetes
  tasks:
    - name: Vault | Configure access
      tags: vault
      delegate_to: localhost
      ansible.builtin.import_tasks: tasks/b_vault.yaml
