- name: Retrieve server service
  delegate_to: localhost
  kubernetes.core.k8s_info:
    kubeconfig: "{{ local_kubeconfig }}"
    kind: Service
    name: "{{ apps_vault.release_name }}"
    namespace: "{{ apps_vault.namespace }}"
    wait: true
    wait_timeout: 300
  register: vault_server
- name: Store server url
  ansible.builtin.set_fact:
    vault_api_url: "http://{{ vault_server.resources.0.spec.clusterIP }}:{{ vault_server.resources.0.spec.ports.0.port }}/v1"

- name: Wait until application is available
  ansible.builtin.uri:
    url: "{{ vault_api_url }}/sys/health"
    method: GET
    status_code:
      - 501 # if not initialized
      - 503 # if sealed
      - 200 # if initialized, unsealed, and active
    return_content: true
  register: vault_health
  until: vault_health.status == 501 or vault_health.status == 503 or vault_health.status == 200
  retries: 60 # This is for wait max 10min (this is for support slow connection)
  delay: 10

- name: Initialize application
  delegate_to: localhost
  ansible.builtin.import_tasks: initialize.yaml

- name: Authenticate console
  ansible.builtin.import_tasks: auth.yaml

- name: Enable static secrets engine for each cluster
  delegate_to: localhost
  kubernetes.core.k8s_exec:
    kubeconfig: "{{ local_kubeconfig }}"
    namespace: "{{ apps_vault.namespace }}"
    pod: "{{ apps_vault.pod_name }}"
    command: >-
      /bin/sh -c 'VAULT_TOKEN={{ vault_root_token | quote }}
      vault secrets enable -path={{ item | quote }} kv-v2'
  register: vault_cmd
  changed_when: vault_cmd.rc == 0
  failed_when:
    - vault_cmd.rc != 0
    - not "path is already in use at" in vault_cmd.stderr
  loop: "{{ hostvars.keys() | list }}"

- name: Configure Vault kubernetes auth
  delegate_to: localhost
  ansible.builtin.import_tasks: auth_kubernetes.yaml

- name: Configure external-secrets access
  ansible.builtin.import_tasks: eso_access.yaml

- name: External-secrets | Wait cluster store ready
  delegate_to: localhost
  kubernetes.core.k8s_info:
    kubeconfig: "{{ local_kubeconfig }}"
    kind: ClusterSecretStore
    name: "{{ apps_vault.store_name }}"
    namespace: "{{ apps_vault.namespace }}"
    wait: true

- name: Flush handlers
  ansible.builtin.meta: flush_handlers
