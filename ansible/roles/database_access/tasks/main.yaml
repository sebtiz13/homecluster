- name: Check if access exist
  no_log: true
  ansible.builtin.uri:
    url: "{{ vault_api_url }}/{{ secret_path }}"
    method: GET
    status_code:
      - 200 # When successfull
      - 204 # When warning
      - 404 # When is not created
    headers:
      X-Vault-Token: "{{ vault_root_token }}"
  register: vault_db_check

- name: Create new access
  when: vault_db_check.status == 404
  block:
    - name: Generate password
      ansible.builtin.set_fact:
        _password: "{{ lookup('ansible.builtin.password', '/dev/null', chars=['ascii_letters', 'digits']) }}"

    - name: Create role and database
      delegate_to: localhost
      kubernetes.core.k8s_exec:
        kubeconfig: "{{ local_kubeconfig }}"
        namespace: database
        pod: "postgres{{ postgres_version }}-1"
        command: >-
          psql -c "\set AUTOCOMMIT on\n
          CREATE ROLE '{{ username }}' WITH LOGIN PASSWORD '{{ _password }}';
          CREATE DATABASE '{{ database }}' OWNER '{{ username }}';"
      register: database_cmd
      changed_when: database_cmd.rc == 0
      failed_when: database_cmd.rc != 0

    - name: Store credentials in vault
      no_log: true
      ansible.builtin.uri:
        url: "{{ vault_api_url }}/{{ secret_path }}"
        method: POST
        status_code:
          - 200 # When successfull
          - 204 # When warning
        body_format: json
        headers:
          X-Vault-Token: "{{ vault_root_token }}"
        body:
          data:
            database: "{{ database }}"
            username: "{{ username }}"
            password: "{{ _password }}"
