##
# Handlers for actions
##
- name: Set actions triggers
  listen: token actions triggers
  ansible.builtin.uri:
    url: "{{ zitadel_internal_url }}/management/v1/flows/{{ item.flow }}/trigger/{{ item.trigger }}"
    method: POST
    headers:
      Host: "{{ apps_zitadel.domain_name }}"
      Authorization: "Bearer {{ zitadel_console_token }}"
    status_code: 200
    body_format: json
    body:
      actionIds:
        - "{{ zitadel_groupsclaim_action.json.id }}"
        - "{{ zitadel_quotaclaim_action.json.id }}"
  loop_control:
    label: "{{ item.name }}"
  loop:
    - name: Pre Userinfo creation
      flow: 2 # Complement token
      trigger: 4
    - name: Pre access token creation
      flow: 2 # Complement token
      trigger: 5

##
# Handlers for projects
##
- name: Create developer roles
  ansible.builtin.uri:
    url: "{{ zitadel_internal_url }}/management/v1/projects/{{ zitadel_dev_project_id }}/roles/_bulk"
    method: POST
    headers:
      Host: "{{ apps_zitadel.domain_name }}"
      Authorization: "Bearer {{ zitadel_console_token }}"
    status_code: 200
    body_format: json
    body:
      roles:
        - key: Operator
          displayName: Operator
          group: Operator
        - key: Admin
          displayName: Administrator
          group: Admin

##
# Handlers for users
##
- name: Add organization permission to admin user
  ansible.builtin.uri:
    url: "{{ zitadel_internal_url }}/management/v1/orgs/me/members"
    method: POST
    headers:
      Host: "{{ apps_zitadel.domain_name }}"
      Authorization: "Bearer {{ zitadel_console_token }}"
    status_code: 200
    body_format: json
    body:
      userId: "{{ zitadel_admin_user.json.userId }}"
      roles:
        - ORG_OWNER
- name: Add developer project permission to admin user
  ansible.builtin.uri:
    url: "{{ zitadel_internal_url }}/management/v1/users/{{ zitadel_admin_user.json.userId }}/grants"
    method: POST
    headers:
      Host: "{{ apps_zitadel.domain_name }}"
      Authorization: "Bearer {{ zitadel_console_token }}"
    status_code: 200
    body_format: json
    body:
      projectId: "{{ zitadel_dev_project_id }}"
      roleKeys:
        - Admin

- name: Add developer project permission to test user
  ansible.builtin.uri:
    url: "{{ zitadel_internal_url }}/management/v1/users/{{ zitadel_test_user.json.userId }}/grants"
    method: POST
    headers:
      Host: "{{ apps_zitadel.domain_name }}"
      Authorization: "Bearer {{ zitadel_console_token }}"
    status_code: 200
    body_format: json
    body:
      projectId: "{{ zitadel_dev_project_id }}"
      roleKeys:
        - Operator
- name: Add quota metadata to test user
  vars:
    quota: "1 GB"
  ansible.builtin.uri:
    url: "{{ zitadel_internal_url }}/management/v1/users/{{ zitadel_test_user.json.userId }}/metadata/quota"
    method: POST
    headers:
      Host: "{{ apps_zitadel.domain_name }}"
      Authorization: "Bearer {{ zitadel_console_token }}"
    status_code: 200
    body_format: json
    body:
      value: "{{ quota | b64encode }}"
