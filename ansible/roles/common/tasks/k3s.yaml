- name: Remove swapfile from /etc/fstab
  ansible.posix.mount:
    name: "{{ item }}"
    fstype: swap
    state: absent
  with_items:
    - swap
    - none

- name: Disable swap
  ansible.builtin.command: swapoff -a
  when: ansible_swaptotal_mb > 0

- name: Get k3s releases
  when: k3s.version is undefined
  ansible.builtin.uri:
    url: https://update.k3s.io/v1-release/channels
    method: GET
    return_content: true
    status_code: 200
    body_format: json
  register: k3s_releases

- name: Retrieve wanted k3s version
  when:
    - k3s_releases is succeeded
    - k3s_releases.status == 200
  vars:
    k3s_release_query: "data[?name == '{{ k3s.channel | default('stable') }}'].latest"
  ansible.builtin.set_fact:
    k3s_default_version: "{{ k3s_releases.json | community.general.json_query(k3s_release_query) | first }}"

- name: Download k3s installer
  vars:
    k3s_version: "{{ k3s.version | default(k3s_default_version) }}"
  ansible.builtin.get_url:
    url: https://raw.githubusercontent.com/k3s-io/k3s/{{ k3s_version }}/install.sh
    dest: ~/k3s-install.sh
    mode: "0540"
  register: k3s_install_file

- name: Install k3s # noqa: no-handler
  when: k3s_install_file is changed
  vars:
    default_flags:
      - --node-name='{{ inventory_hostname }}'
      - --write-kubeconfig-mode=644
      - --disable=traefik
      - --tls-san='{{ k3s_domain | default(domain_name) }}'
    flags: '{{ (default_flags + (k3s.flags | default([]))) | join(" ") }}'
  environment:
    INSTALL_K3S_VERSION: "{{ k3s.version | default(k3s_default_version) }}"
  ansible.builtin.command: sh {{ k3s_install_file.dest }} server {{ flags }}

- name: Store kubeconfig
  ansible.builtin.fetch:
    src: /etc/rancher/k3s/k3s.yaml
    dest: "{{ out_dir }}/kubeconfig/{{ inventory_hostname }}.{{ env }}.yaml"
    flat: true
  register: kubeconfig
  notify: Fix kubeconfig mode
- name: Configure host on kubeconfig
  connection: local
  become: false
  ansible.builtin.lineinfile:
    path: "{{ kubeconfig.dest }}"
    regexp: '^(.*server: https:\/\/)127\.0\.0\.1(:6443)$'
    line: '\1{{ k3s_domain | default(domain_name) }}\2'
    backrefs: true
- name: Configure node name on kubeconfig
  connection: local
  become: false
  ansible.builtin.replace:
    path: "{{ kubeconfig.dest }}"
    regexp: "default$"
    replace: "{{ inventory_hostname }}"

- name: Wait node started
  connection: local
  become: false
  kubernetes.core.k8s_info:
    kubeconfig: "{{ kubeconfig.dest }}"
    kind: Node
    name: "{{ inventory_hostname }}"
    wait: true

- name: Retrieve api server info
  connection: local
  become: false
  kubernetes.core.k8s_info:
    kubeconfig: "{{ kubeconfig.dest }}"
    kind: Service
    name: kubernetes
    namespace: default
  register: k3s_apiserver
