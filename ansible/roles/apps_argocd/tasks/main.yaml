- name: Retrieve application informations
  vars:
    manifest: "{{ lookup('file', manifests_folder + '/argocd.yaml') | from_yaml }}"
    host: "https://{{ manifest.metadata.annotations['sebtiz13.fr/host'] }}"
  ansible.builtin.set_fact:
    apps_argocd:
      _manifest: "{{ manifest }}"
      _values: "{{ manifest.spec.source.helm['values'] | from_yaml }}"
      release_name: "{{ manifest.spec.source.helm.releaseName }}"
      namespace: "{{ manifest.spec.destination.namespace }}"
      host: "{{ host }}"
    argocd_api_url: "{{ host }}/api/v1"

- name: Retrieve External Secrets informations
  vars:
    manifest: "{{ lookup('file', manifests_folder + '/external-secrets.yaml') | from_yaml }}"
  ansible.builtin.set_fact:
    apps_external_secrets:
      version: "{{ manifest.spec.source.targetRevision }}"
      release_name: "{{ manifest.spec.source.helm.releaseName }}"
      namespace: "{{ manifest.spec.destination.namespace }}"

- name: Setup requirements for deploy application
  ansible.builtin.import_tasks: setup.yaml

- name: Check if application is already deploy
  kubernetes.core.k8s_info:
    kubeconfig: "{{ local_kubeconfig }}"
    kind: Service
    name: "{{ apps_argocd.release_name }}-server"
    namespace: "{{ apps_argocd.namespace }}"
  register: argocd_server

- name: Deploy chart
  when: argocd_server.resources | length == 0 # This prevent re deploy with helm when is already deployed
  kubernetes.core.helm:
    kubeconfig: "{{ local_kubeconfig }}"
    chart_ref: "argo-cd/{{ apps_argocd._manifest.spec.source.chart }}"
    chart_version: "{{ apps_argocd._manifest.spec.source.targetRevision }}"
    release_name: "{{ apps_argocd.release_name }}"
    release_namespace: "{{ apps_argocd.namespace }}"
    release_values: "{{ apps_argocd._values }}"
    wait: true
  register: argocd_deploy

- name: Deploy ArgoCD application manifest
  kubernetes.core.k8s:
    kubeconfig: "{{ local_kubeconfig }}"
    state: present
    resource_definition: "{{ apps_argocd._manifest }}"
    namespace: "{{ apps_argocd.namespace }}"
  notify: Restart server application

- name: Create admin access
  ansible.builtin.import_tasks: admin.yaml
