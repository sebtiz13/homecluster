- name: Store CA in cluster
  when: env == 'dev'
  vars:
    manifest: "{{ lookup('file', manifests_folder + '/cert-manager.yaml') | from_yaml }}"
    namespace: '{{ manifest.spec.destination.namespace }}'
  block:
    - name: Create namespace
      kubernetes.core.k8s:
        kubeconfig: '{{ kubeconfig.dest }}'
        state: present
        resource_definition:
          apiVersion: v1
          kind: Namespace
          metadata:
            name: '{{ namespace }}'

    - name: Store CA in cluster
      kubernetes.core.k8s:
        kubeconfig: '{{ kubeconfig.dest }}'
        template: ca_tls.yaml.j2
        namespace: '{{ namespace }}'
        validate:
          fail_on_error: true

- name: Write Vault secrets
  when: env == 'prod'
  vars:
    secrets:
      - path: cert-manager/ovh
        data:
          applicationKey: '{{ cert_manager_ovh_auth.application_key }}'
          applicationSecret: '{{ cert_manager_ovh_auth.application_secret }}'
          consumerKey: '{{ cert_manager_ovh_auth.consumer_key }}'
  ansible.builtin.import_role:
    name: vault_secrets

- name: Deploy application manifest
  kubernetes.core.k8s:
    kubeconfig: '{{ kubeconfig.dest }}'
    state: present
    src: '{{ manifests_folder }}/cert-manager.yaml'
    namespace: '{{ apps_argocd.namespace }}'
