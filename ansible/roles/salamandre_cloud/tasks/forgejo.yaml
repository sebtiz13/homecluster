- name: Forgejo | Retrieve application informations
  vars:
    manifest: "{{ lookup('file', manifests_folder + '/forgejo.yaml') | from_yaml }}"
    values: "{{ manifest.spec.source.helm['values'] | from_yaml }}"
    hex_chars: 0123456789abcdef
  ansible.builtin.set_fact:
    apps_forgejo:
      _manifest: "{{ manifest }}"
      _db_passowrd: "{{ lookup('ansible.builtin.password', '/dev/null', chars=['ascii_letters', 'digits']) }}"
      _runner_token: "{{ lookup('community.general.random_string', length=40, override_all=hex_chars) }}"
      release_name: "{{ manifest.spec.source.helm.releaseName }}"
      namespace: "{{ manifest.spec.destination.namespace }}"
      secretNames: "{{ values['external-secrets'].secrets | map(attribute='name') }}"
      host: "https://{{ manifest.metadata.annotations['sebtiz13.fr/host'] }}"

- name: Forgejo | Create database access # noqa: var-naming[no-role-prefix]
  ansible.builtin.include_role:
    name: database_access
  vars:
    database: forgejo
    username: forgejo
    password: "{{ apps_forgejo._db_passowrd }}"

- name: Forgejo | Check if is already deploy
  kubernetes.core.k8s_info:
    kubeconfig: "{{ local_kubeconfig }}"
    kind: Service
    name: "{{ apps_forgejo.release_name }}"
    namespace: "{{ apps_forgejo.namespace }}"
  register: forgejo_server

- name: Forgejo | Deploy application and secrets # noqa: var-naming[no-role-prefix]
  ansible.builtin.include_role:
    name: argocd_app
  vars:
    manifest: "{{ apps_forgejo._manifest }}"
    restart_resources:
      - kind: Deployment
        name: "{{ apps_forgejo.release_name }}"
      - kind: Deployment
        name: "{{ apps_forgejo.release_name }}-runner"
    wait_resources:
      - kind: Deployment
        name: "{{ apps_forgejo.release_name }}"
    refresh_es: "{{ [apps_forgejo.release_name + '-'] | product(apps_forgejo.secretNames) | map('join') | list }}"
    secrets:
      # ?REF: `forgejo/oidc` > oidc/tasks/main.yaml
      - path: forgejo/auth
        data:
          adminUser: root
          adminPassword: "{{ admin_passwords.forgejo }}"
      - path: forgejo/runner
        data:
          token: "{{ apps_forgejo._runner_token }}"
      - path: forgejo/database
        data:
          host: postgresql.loc
          database: forgejo
          user: forgejo
          password: "{{ apps_forgejo._db_passowrd }}"

- name: Forgejo | Retrieve pod informations
  # when: forgejo_server.resources | length == 0
  kubernetes.core.k8s_info:
    kubeconfig: "{{ local_kubeconfig }}"
    kind: pod
    namespace: "{{ apps_forgejo.namespace }}"
    label_selectors:
      - app=forgejo
    field_selectors:
      - status.phase=Running
  register: forgejo_pod

- name: Forgejo | Register runner
  when: forgejo_pod is not skipped
  kubernetes.core.k8s_exec:
    kubeconfig: "{{ local_kubeconfig }}"
    namespace: "{{ apps_forgejo.namespace }}"
    pod: "{{ (forgejo_pod.resources | first).metadata.name }}"
    command: >-
      forgejo forgejo-cli actions register
      --name '{{ apps_forgejo._runner.name }}'
      --secret '{{ apps_forgejo._runner_token }}'
