- name: Vaultwarden | Generate database password
  ansible.builtin.set_fact:
    apps_vaultwarden:
      _db_passowrd: "{{ lookup('ansible.builtin.password', '/dev/null', chars=['ascii_letters', 'digits']) }}"

- name: Vaultwarden | Create traefik admin auth access # noqa: var-naming[no-role-prefix]
  tags: traefik
  ansible.builtin.include_role:
    name: traefik_auth
  vars:
    namespace: traefik
    middleware_name: admin-auth
    secret_name: admin-users
    users: "{{ basic_auth_users }}"

- name: Vaultwarden | Create database access # noqa: var-naming[no-role-prefix]
  ansible.builtin.include_role:
    name: database_access
  vars:
    database: vaultwarden
    username: vaultwarden
    password: "{{ apps_vaultwarden._db_passowrd }}"

- name: Vaultwarden | Deploy application and secrets # noqa: var-naming[no-role-prefix]
  ansible.builtin.include_role:
    name: argocd_app
  vars:
    manifest: "{{ lookup('file', manifests_folder + '/vaultwarden.yaml') | from_yaml }}"
    _secret_names: "{{ (manifest.spec.source.helm['values'] | from_yaml)['external-secrets'].secrets | map(attribute='name') }}"
    restart_resources:
      - kind: Deployment
        name: "{{ manifest.spec.source.helm.releaseName }}"
    refresh_es: "{{ [manifest.spec.source.helm.releaseName + '-'] | product(_secret_names) | map('join') | list }}"
    secrets:
      - path: vaultwarden/database
        data:
          host: postgresql.loc
          port: "5432"
          database: vaultwarden
          user: vaultwarden
          password: "{{ apps_vaultwarden._db_passowrd }}"
