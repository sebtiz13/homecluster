- name: Generate Nextcloud database password
  vars:
    manifest: "{{ lookup('file', manifests_folder + '/nextcloud.yaml') | from_yaml }}"
    values: '{{ manifest.spec.source.plugin.env.1.value }}'
    host: "https://{{ manifest.metadata.annotations['sebtiz13.fr/host'] }}"
  ansible.builtin.set_fact:
    apps_nextcloud:
      _manifest: '{{ manifest }}'
      _db_passowrd: "{{ lookup('ansible.builtin.password', '/dev/null', chars=['ascii_letters', 'digits']) }}"
      release_name: '{{ manifest.spec.source.plugin.env.0.value }}'
      namespace: '{{ manifest.spec.destination.namespace }}'
      host: '{{ host }}'

- name: Create Nextcloud database access
  ansible.builtin.include_role:
    name: database_access
  vars:
    database: nextcloud
    username: nextcloud
    password: '{{ apps_nextcloud._db_passowrd }}'

- name: Check if Nextcloud is already deploy
  kubernetes.core.k8s_info:
    kubeconfig: '{{ kubeconfig.dest }}'
    api_version: v1
    kind: Service
    name: '{{ apps_nextcloud.release_name }}'
    namespace: '{{ apps_nextcloud.namespace }}'
  register: nextcloud_server

- name: Deploy Nextcloud application and secrets
  ansible.builtin.include_role:
    name: argocd_vault
  vars:
    manifest: '{{ apps_nextcloud._manifest }}'
    restart_resources:
      - kind: Deployment
        name: '{{ apps_nextcloud.release_name }}'
    secrets:
      - path: nextcloud/auth
        data:
          adminUser: admin
          adminPassword: '{{ admin_passwords.nextcloud }}'
          collaboraAdminUser: admin
          collaboraAdminPassword: '{{ admin_passwords.collabora }}'
      - path: nextcloud/database
        data:
          host: postgresql.loc
          port: '5432'
          database: nextcloud
          user: nextcloud
          password: '{{ apps_nextcloud._db_passowrd }}'

- name: Wait until Nextcloud is installed
  when: nextcloud_server.resources | length == 0 # This is for run only on first install
  ansible.builtin.uri:
    url: '{{ apps_nextcloud.host }}/status.php'
    method: GET
    status_code: 200
    return_content: true
  register: health
  until: (health.status == 200 and health.json.installed)
  retries: 60 # This is for wait max 10min (this is for support slow connection)
  delay: 10

- name: Retrieve Nexcloud pod informations
  when: nextcloud_server.resources | length == 0 # This is for run only on first install
  kubernetes.core.k8s_info:
    kubeconfig: '{{ kubeconfig.dest }}'
    api_version: v1
    kind: Pod
    namespace: '{{ apps_nextcloud.namespace }}'
    label_selectors:
      - app.kubernetes.io/component=app
      - 'app.kubernetes.io/instance={{ apps_nextcloud.release_name }}'
      - 'app.kubernetes.io/name={{ apps_nextcloud.release_name }}'
    field_selectors:
      - status.phase=Running
  register: nextcloud_pod

- name: Configure Nexcloud apps
  when: nextcloud_server.resources | length == 0 # This is for run only on first install
  vars:
    commands:
      - name: Configure Preview app
        commands:
          - php occ config:app:set preview jpeg_quality --value 60
      - name: Enable Admin audit
        commands:
          - php occ app:enable admin_audit
          - php occ config:app:set admin_audit logfile --value /var/www/html/data/audit.log
      - name: Enable 2FA (TOTP)
        commands:
          - php occ app:enable twofactor_totp
      - name: Enable Collabora
        commands:
          - php occ app:enable richdocuments
          - php occ config:app:set richdocuments disable_certificate_verification --value true
          - php occ config:app:set richdocuments wopi_allowlist --value 10.42.0.0/16
          - php occ config:app:set richdocuments wopi_url --value {{ apps_nextcloud.host }}
      - name: Enable Mail
        commands:
          - php occ app:enable mail
      - name: Enable Bookmarks
        commands:
          - php occ app:enable bookmarks
          - php occ config:app:set bookmarks privacy.enableScraping --value true
      - name: Enable Brute-force settings
        commands:
          - php occ app:enable bruteforcesettings
      - name: Enable Contacts
        commands:
          - php occ app:enable contacts
      - name: Enable Draw.io
        commands:
          - php occ app:enable drawio
          - php occ config:app:set drawio DrawioTheme --value dark
          - php occ config:app:set drawio DrawioLibraries --value yes
      - name: Enable External sites
        commands:
          - php occ app:enable external
      - name: Enable Metadata
        commands:
          - php occ app:enable metadata
      - name: Enable Notes
        commands:
          - php occ app:enable notes
      - name: Enable Quota warning
        commands:
          - php occ app:enable quota_warning
      - name: Enable Ransomware protection
        commands:
          - php occ app:enable ransomware_protection
          - php occ config:app:set ransomware_protection notes_include_biased --value yes
          # Exclude AndOTP backup
          - php occ config:app:set ransomware_protection extension_additions --value ["^(?<!otp_accounts.*\\.json)\\.aes$"]
          - php occ config:app:set ransomware_protection extension_exclusions --value [".aes"]
      - name: Enable Retention
        commands:
          - php occ app:enable files_retention
      - name: Enable Calendar
        commands:
          - php occ app:enable calendar
      - name: Disable Activity
        commands:
          - php occ app:disable activity
      - name: Disable Circles
        commands:
          - php occ app:disable circles
      - name: Disable Collaborative tags
        commands:
          - php occ app:disable systemtags
      - name: Disable Federation
        commands:
          - php occ app:disable federation
      - name: Disable Privacy
        commands:
          - php occ app:disable privacy
      - name: Disable Nextcloud announcements
        commands:
          - php occ app:disable nextcloud_announcements
      - name: Disable Support
        commands:
          - php occ app:disable support
      - name: Disable Usage survey
        commands:
          - php occ app:disable survey_client
      - name: Disable User status
        commands:
          - php occ app:disable user_status
      - name: Disable Weather status
        commands:
          - php occ app:disable weather_status
  kubernetes.core.k8s_exec:
    kubeconfig: '{{ kubeconfig.dest }}'
    namespace: '{{ apps_nextcloud.namespace }}'
    pod: '{{ (nextcloud_pod.resources | first).metadata.name }}'
    command: su -m www-data -s /bin/sh -c '{{ item.commands | join(' && ') }}'
  loop: '{{ commands }}'
  loop_control:
    label: '{{ item.name }}'
