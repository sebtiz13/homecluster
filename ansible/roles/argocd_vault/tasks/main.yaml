- name: Write Vault secrets # noqa: var-naming[no-role-prefix]
  vars:
    ansible_hashi_vault_addr: "{{ hostvars.salamandre.ansible_hashi_vault_addr }}"
    ansible_hashi_vault_token: "{{ hostvars.salamandre.ansible_hashi_vault_token }}"
    # secrets: "{{ secrets }}"
  delegate_to: localhost
  ansible.builtin.import_role:
    name: vault_secrets

- name: Deploy application manifest
  delegate_to: localhost
  kubernetes.core.k8s:
    kubeconfig: "{{ hostvars.salamandre.kubeconfig.dest }}"
    state: present
    resource_definition: "{{ manifest }}"
    namespace: "{{ hostvars.salamandre.apps_argocd.namespace }}"
  register: argocd_manifest

- name: Refresh application
  when:
    - argocd_manifest is not changed
    - vault_secret is changed
  delegate_to: localhost
  ansible.builtin.uri:
    url: "{{ hostvars.salamandre.argocd_api_url }}/applications/{{ manifest.metadata.name }}?refresh=hard"
    headers:
      Authorization: "Bearer {{ hostvars.salamandre.argocd_api_token }}"
    method: GET
    status_code: 200
    timeout: 300
  register: argocd_refresh

- name: Restart application resources for update secrets
  when:
    - argocd_manifest is not changed
    - vault_secret is changed
  delegate_to: "{{ inventory_hostname }}"
  ansible.builtin.command: |
    kubectl rollout restart {{ item.kind }}
      --namespace '{{ manifest.spec.destination.namespace }}'
      '{{ item.name }}'
  changed_when: false
  loop: "{{ restart_resources }}"
