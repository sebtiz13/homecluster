- name: Install sensors, database, configure coreDNS
  hosts: salamandre
  roles:
    - role: salamandre_sensors
      when: motherboard_chip is defined
      connection: ssh
      become: true
      tags: sensors
    - role: database
      connection: ssh
      become: true
      tags: database
    - role: coredns
      delegate_to: localhost
      tags: kubernetes

- name: Install prerequired applications
  hosts: salamandre
  tags: kubernetes
  roles:
    - role: apps_argocd
      delegate_to: localhost
      tags: argocd
    - role: kubed_kubeconfig
      delegate_to: localhost
      tags: kubed
    - role: apps_system
      delegate_to: localhost
      tags: common
    - role: apps_external-secrets
      delegate_to: localhost
      tags: external-secret
    - role: apps_vault
      delegate_to: localhost
      tags: vault

- name: Install cert-manager, dev apps, configure smtp auth and create traefik auth
  hosts: salamandre
  tags: kubernetes
  pre_tasks:
    - name: Store ArgoCD api token in facts
      ansible.builtin.set_fact:
        argocd_api_token: "{{ argocd_admin_auth.json.token }}"
  roles:
    - role: traefik_auth
      delegate_to: localhost
      tags: traefik
      vars:
        namespace: traefik
        middleware_name: admin-auth
        secret_name: admin-users
        users: "{{ basic_auth_users }}"
    - role: apps_cert-manager
      delegate_to: localhost
      tags:
        - cert-manager
        - tls
    - role: vault_secrets
      delegate_to: localhost
      tags: smtp
      vars:
        validate_certs: false
        secrets:
          - path: smtp
            data: "{{ smtp_auth }}"
    - role: salamandre_dev
      delegate_to: localhost
      when: env == 'dev'
  post_tasks:
    - name: Wait until tls certificate created in vault
      delegate_to: localhost
      tags:
        - vault
        - cert-manager
        - tls
      kubernetes.core.k8s_info:
        kubeconfig: "{{ kubeconfig.dest }}"
        kind: Secret
        name: "{{ root_domain | replace('.', '-') }}-tls"
        namespace: "{{ apps_vault.namespace }}"
        wait: true
        wait_sleep: 10
        wait_timeout: 360

- name: Install, configure OIDC and sync ArgoCD
  hosts: salamandre
  tags: kubernetes
  pre_tasks:
    - name: Retrieve keycloak informations
      vars:
        manifest: "{{ lookup('file', manifests_folder + '/keycloak.yaml') | from_yaml }}"
        base_url: "https://{{ manifest.metadata.annotations['sebtiz13.fr/host'] }}"
        realm: developer
      ansible.builtin.set_fact:
        apps_keycloak:
          _manifest: "{{ manifest }}"
          _db_passowrd: "{{ lookup('ansible.builtin.password', '/dev/null', chars=['ascii_letters', 'digits']) }}"
          release_name: "{{ manifest.spec.source.plugin.env.0.value }}"
          namespace: "{{ manifest.spec.destination.namespace }}"
          base_url: "{{ base_url }}"
          issuer: "{{ base_url }}/realms/{{ realm }}"
          realm: "{{ realm }}"
  roles:
    # ALways deploy oidc secrets for applications (event if oidc is disabled, this is for argocd vaukt plugin)
    - role: vault_secrets
      delegate_to: localhost
      vars:
        secrets:
          - path: argocd/oidc
            data:
              issuer: "{{ apps_keycloak.issuer }}"
              cliClientID: argocd-cli
              clientID: argocd
              clientSecret: "{{ lookup('ansible.builtin.password', '/dev/null', chars=['ascii_letters', 'digits'], length=32) }}"
          - path: grafana/oidc
            data:
              issuer: "{{ apps_keycloak.issuer }}"
              clientID: grafana
              clientSecret: "{{ lookup('ansible.builtin.password', '/dev/null', chars=['ascii_letters', 'digits'], length=32) }}"
    - role: oidc
      delegate_to: localhost
      tags: oidc
    - role: argocd_sync
      delegate_to: localhost
      tags: argocd

- name: Install infrastructure applications
  hosts: salamandre
  tags: kubernetes
  roles:
    - role: salamandre_infrastructure
      delegate_to: localhost

- name: Install cloud applications
  hosts: salamandre
  tags:
    - kubernetes
    - cloud
  roles:
    - role: salamandre_cloud
      delegate_to: localhost
