- name: Deploy common system applications
  hosts: all
  tags: kubernetes
  roles:
    - role: apps_system
      delegate_to: localhost
      tags: common

- name: Deploy salamandre applications
  hosts: salamandre
  tags: kubernetes
  pre_tasks:
    - name: Setup Cert Manager
      delegate_to: localhost
      tags:
        - cert-manager
        - tls
      ansible.builtin.import_tasks: tasks/s_cert-manager.yaml
  roles:
    - role: apps_vault
      delegate_to: localhost
      tags: vault
    - name: Cert Manager | Write secrets (prod)
      role: vault_secrets
      when: env == 'prod'
      vars:
        secrets: # noqa: var-naming[no-role-prefix]
          - path: cert-manager/ovh
            data:
              applicationKey: "{{ cert_manager_ovh_auth.application_key }}"
              applicationSecret: "{{ cert_manager_ovh_auth.application_secret }}"
              consumerKey: "{{ cert_manager_ovh_auth.consumer_key }}"
  post_tasks:
    - name: Config Syncer | Connect salamandre to baku
      delegate_to: localhost
      tags: config-syncer
      when: "(ansible_limit is not defined) or ('baku' in ansible_limit)"
      vars:
        cluster_kubeconfig: "{{ hostvars.baku.local_kubeconfig | default('') }}"
        cluster_namespace: "config-syncer-sync"
      ansible.builtin.import_tasks: tasks/s_cs_cluster.yaml

- name: Deploy baku applications
  hosts: baku
  tags: kubernetes
  tasks:
    - name: Config Syncer | Sync TLS
      delegate_to: localhost
      tags: config-syncer
      ansible.builtin.import_tasks: tasks/b_cs_tls.yaml
    - name: Vault | Configure access
      delegate_to: localhost
      tags: vault
      ansible.builtin.import_tasks: tasks/b_vault.yaml

- name: Configure external-secrets
  hosts: all
  tags:
    - kubernetes
    - external-secrets
  roles:
    - role: apps_external-secrets
      delegate_to: localhost
