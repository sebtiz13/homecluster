# -*- mode: ruby -*-
# vi: set ft=ruby :

ENV['VAGRANT_DEFAULT_PROVIDER'] = 'libvirt'

current_dir = File.dirname(File.expand_path(__FILE__))
storage_pool_name = ENV['VAGRANT_STORAGE_POOL'] || "default"

Vagrant.configure("2") do |config|
  # SSH pub key file path
  # Set this value to empty for disable
  sshKeyFilePath = "#{current_dir}/id_rsa.pub"

  # Base image for nodes
  config.vm.box = "debian/bullseye64"

  # Nodes list and their parameters
  NODES = [
    {
      :name => "salamandre",
      :hostname => "salamandre.vm",
      :domain => "local.vm",
      :ip => "192.168.12.10",
      :cpus => 5,
      :memory => 10 * 1024
    },
    {
      :name => "baku",
      :hostname => "baku.vm",
      :domain => "baku.local.vm",
      :ip => "192.168.12.11",
      :cpus => 3,
      :memory => 4 * 1024
    }
  ]

  # Create vms
  NODES.each do |node|
    config.vm.define node[:name] do |cfg|
      cfg.vm.hostname = node[:hostname]
      cfg.vm.box_check_update = false
      cfg.vm.network :private_network, :ip => node[:ip]

      # Configure provider
      cfg.vm.provider :libvirt do |v|
        v.driver = "kvm"
        v.storage_pool_name = storage_pool_name
        v.title = node[:hostname]
        v.cpus = node[:cpus]
        v.memory = node[:memory]

        # Provide disks
        ['b', 'c', 'd'].each do |l|
          v.storage :file,
            :size => '20G',
            :device => 'vd' + l,
            :serial => 'virtual_disk_' + l,
            :bus => 'scsi', :type => 'qcow2', :discard => 'unmap', :detect_zeroes => 'on'
        end
      end

      # Provisioning hosts of other nodes
      NODES.each do |n|
        if node[:hostname] != n[:hostname]
          cfg.vm.provision :shell do |s|
            s.name = "Configure hosts"
            s.inline = "echo '" + n[:ip] + " " + n[:hostname] + " " + n[:domain] + "' >> /etc/hosts"
          end
        end
      end
    end
  end
end
