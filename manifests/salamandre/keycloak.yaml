---
# Source: common-app/templates/application.yaml
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: salamandre-keycloak
  labels:    
    helm.sh/chart: common-app-0.0.1
    app.kubernetes.io/version: "0.0.1"
    app.kubernetes.io/managed-by: Helm
spec:
  project: infrastructure
  source:
    repoURL: https://charts.bitnami.com/bitnami
    chart: keycloak
    targetRevision: 10.1.4
    plugin:
      name: argocd-vault-plugin-helm
      env:
        - name: HELM_RELEASE_NAME
          value: keycloak
        - name: HELM_VALUES
          value: |
            auth:
              adminPassword: <path:argocd/data/keycloak/auth#adminPassword>
              adminUser: <path:argocd/data/keycloak/auth#adminUser>
            cache:
              enabled: true
            externalDatabase:
              database: <path:argocd/data/keycloak/database#database>
              host: <path:argocd/data/keycloak/database#host>
              password: <path:argocd/data/keycloak/database#password>
              port: <path:argocd/data/keycloak/database#port>
              user: <path:argocd/data/keycloak/database#user>
            extraEnvVars:
            - name: TZ
              value: Europe/Paris
            - name: KEYCLOAK_PRODUCTION
              value: "true"
            - name: KEYCLOAK_HOSTNAME
              value: sso.sebtiz13.fr
            fullnameOverride: keycloak
            ingress:
              annotations:
                traefik.ingress.kubernetes.io/router.entrypoints: web,websecure
                traefik.ingress.kubernetes.io/router.middlewares: traefik-redirect-https@kubernetescrd
              enabled: true
              extraTls:
              - hosts:
                - sso.sebtiz13.fr
                secretName: sebtiz13-fr-tls
              hostname: sso.sebtiz13.fr
              ingressClassName: traefik
            keycloakConfigCli:
              command:
              - java
              - -jar
              - /opt/bitnami/keycloak-config-cli/keycloak-config-cli-19.0.1.jar
              configuration:
                realm1.yaml: |2
            
                  attributes:
                    frontendUrl: https://sso.sebtiz13.fr
                  clientScopes:
                  - attributes:
                      display.on.consent.screen: "true"
                      include.in.token.scope: "true"
                    name: groups
                    protocol: openid-connect
                    protocolMappers:
                    - config:
                        access.token.claim: "true"
                        claim.name: groups
                        full.path: "false"
                        id.token.claim: "true"
                        userinfo.token.claim: "true"
                      consentRequired: false
                      name: groups
                      protocol: openid-connect
                      protocolMapper: oidc-group-membership-mapper
                  - attributes:
                      display.on.consent.screen: "true"
                      include.in.token.scope: "true"
                    name: policies
                    protocol: openid-connect
                    protocolMappers:
                    - config:
                        access.token.claim: "true"
                        claim.name: policy
                        id.token.claim: "true"
                        jsonType.label: String
                        user.attribute: policy
                        userinfo.token.claim: "true"
                      consentRequired: false
                      name: policy
                      protocol: openid-connect
                      protocolMapper: oidc-usermodel-attribute-mapper
                  clients:
                  - attributes:
                      backchannel.logout.session.required: "true"
                    baseUrl: /
                    clientAuthenticatorType: client-secret
                    clientId: <path:argocd/data/argocd/oidc#clientID>
                    defaultClientScopes:
                    - web-origins
                    - profile
                    - roles
                    - groups
                    - email
                    directAccessGrantsEnabled: true
                    enabled: true
                    fullScopeAllowed: true
                    optionalClientScopes:
                    - address
                    - phone
                    - offline_access
                    - microprofile-jwt
                    protocol: openid-connect
                    publicClient: false
                    redirectUris:
                    - /
                    - /applications
                    - /auth/callback
                    rootUrl: https://argocd.sebtiz13.fr
                    secret: <path:argocd/data/argocd/oidc#clientSecret>
                    standardFlowEnabled: true
                    webOrigins:
                    - /ui/vault/auth
                  - adminUrl: http://localhost:8085
                    attributes:
                      backchannel.logout.session.required: "true"
                    clientAuthenticatorType: client-secret
                    clientId: <path:argocd/data/argocd/oidc#cliClientID>
                    defaultClientScopes:
                    - web-origins
                    - profile
                    - roles
                    - groups
                    - email
                    directAccessGrantsEnabled: true
                    enabled: true
                    fullScopeAllowed: true
                    optionalClientScopes:
                    - address
                    - phone
                    - offline_access
                    - microprofile-jwt
                    protocol: openid-connect
                    publicClient: true
                    redirectUris:
                    - http://localhost:8085/*
                    rootUrl: http://localhost:8085
                    standardFlowEnabled: true
                    webOrigins:
                    - http://localhost:8085
                  - adminUrl: /ui/vault/auth/oidc/oidc/callback
                    attributes:
                      backchannel.logout.session.required: "true"
                    baseUrl: /ui/
                    clientAuthenticatorType: client-secret
                    clientId: <path:argocd/data/vault/oidc#clientID>
                    defaultClientScopes:
                    - web-origins
                    - profile
                    - roles
                    - groups
                    - email
                    directAccessGrantsEnabled: true
                    enabled: true
                    fullScopeAllowed: true
                    optionalClientScopes:
                    - address
                    - phone
                    - offline_access
                    - microprofile-jwt
                    protocol: openid-connect
                    publicClient: false
                    redirectUris:
                    - /oidc/callback
                    - /ui/vault/auth/oidc/oidc/callback/*
                    - http://localhost:8250/oidc/callback
                    rootUrl: https://vault-secrets.sebtiz13.fr
                    secret: <path:argocd/data/argocd/oidc#clientSecret>
                    standardFlowEnabled: true
                    webOrigins:
                    - /ui/vault/auth
                  enabled: true
                  groups:
                  - attributes:
                      policy:
                      - consoleAdmin
                    name: Admin
                    path: /Admin
                    realmRoles:
                    - editor
                    - admin
                  - attributes:
                      policy:
                      - readwrite
                    name: Operator
                    path: /Operator
                    realmRoles:
                    - editor
                  - name: Users
                    path: /Users
                  id: developer
                  realm: developer
                  registrationAllowed: false
                  registrationEmailAsUsername: false
                  roles:
                    realm:
                    - clientRole: false
                      composite: false
                      containerId: developer
                      name: editor
                    - clientRole: false
                      composite: false
                      containerId: developer
                      description: $${role_admin}
                      name: admin
              enabled: true
            postgresql:
              enabled: false
            proxy: edge
            service:
              type: ClusterIP
  destination:
    server: https://kubernetes.default.svc
    namespace: keycloak
  syncPolicy:
    automated: 
      prune: true
      selfHeal: true
