apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: minio
  namespace: argocd
spec:
  project: cluster-core-apps
  source:
    repoURL: https://charts.min.io/
    chart: minio
    targetRevision: 4.0.15
    plugin:
      name: argocd-vault-plugin-helm
      env:
        - name: HELM_VALUES
          value: |
            fullnameOverride: "minio"
            priorityClassName: system-cluster-critical

            rootUser: <path:argocd/data/minio/auth#rootUser>
            rootPassword: <path:argocd/data/minio/auth#rootPassword>
            mode: standalone

            buckets:
              - name: <path:argocd/data/gitlab/s3#bucket_artifacts>
                policy: none
              - name: <path:argocd/data/gitlab/s3#bucket_backups>
                policy: none
              - name: <path:argocd/data/gitlab/s3#bucket_depsProxy>
                policy: none
              - name: <path:argocd/data/gitlab/s3#bucket_packages>
                policy: none
              - name: <path:argocd/data/gitlab/s3#bucket_runner>
                policy: none
              - name: <path:argocd/data/gitlab/s3#bucket_tfState>
                policy: none
              - name: <path:argocd/data/gitlab/s3#bucket_uploads>
                policy: none
              - name: <path:argocd/data/gitlab/s3#bucket_lfs>
                policy: none
              - name: tmp
                policy: none

            policies: []
            users: []
            customCommands:
              - command: admin user svcacct add --access-key="<path:argocd/data/gitlab/s3#accessKey>" --secret-key="<path:argocd/data/gitlab/s3#secretKey>" --policy=$(echo '{"Version":"2012-10-17","Statement":[{"Effect":"Allow","Action":["s3:ListBucket","s3:GetObject","s3:DeleteObject","s3:PutObject"],"Resource":["arn:aws:s3:::gitlab-*/*","arn:aws:s3:::git-lfs/*","arn:aws:s3:::tmp/*"]}]}' > policy.json && echo policy.json) myminio <path:argocd/data/minio/auth#rootUser>

            environment:
              MINIO_BROWSER_REDIRECT_URL: https://console.${url}
            ingress:
              enabled: true
              annotations:
                traefik.ingress.kubernetes.io/router.entrypoints: websecure
              path: /
              hosts:
                - ${url}
              tls:
                - secretName: ${tls_secret_name}
                  hosts:
                    - ${url}
            consoleIngress:
              enabled: true
              annotations:
                traefik.ingress.kubernetes.io/router.entrypoints: websecure
              hosts:
                - console.${url}
              tls:
                - secretName: ${tls_secret_name}
                  hosts:
                    - console.${url}

            persistence:
              size: 10Gi
            resources:
              requests:
                 cpu: 10m
                 memory: 192Mi
              limits:
                 cpu: 500m
                 memory: 512Mi
  destination:
    server: https://kubernetes.default.svc
    namespace: minio
  syncPolicy:
    syncOptions:
      - CreateNamespace=true
    automated:
      prune: true
      selfHeal: true
