apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: argo-cd
  namespace: argocd
spec:
  project: cluster-core-apps
  source:
    repoURL: https://argoproj.github.io/argo-helm
    chart: argo-cd
    targetRevision: 5.4.1
    helm:
      values: |
        fullnameOverride: "argocd"

        # Disable not used services
        dex:
          enabled: false
        applicationSet:
          enabled: false
        notifications:
          enabled: false

        server:
          # Additional command line arguments to pass to argocd-server
          extraArgs:
            - --insecure

          # Environment variables to pass to argocd-server
          env:
            - name: TZ
              value: Europe/Paris

          ingress:
            enabled: true
            ingressClassName: traefik
            hosts:
              - ${url}

          config:
            url: http://${url}

            configManagementPlugins: |-
              - name: argocd-vault-plugin
                generate:
                  command: ["argocd-vault-plugin"]
                  args: ["generate", "./"]
              - name: argocd-vault-plugin-helm
                init:
                  command: [sh, -c]
                  args: ["helm dependency update"]
                generate:
                  command: [sh, -c]
                  args: ['echo "$ARGOCD_ENV_HELM_VALUES" > extra.values.yaml && helm template $ARGOCD_APP_NAME --namespace $ARGOCD_APP_NAMESPACE $ARGOCD_ENV_HELM_ARGS -f extra.values.yaml . | argocd-vault-plugin generate -']

            oidc.config: |
              name: Keycloak
              issuer: http://${oidc_url}/realms/developer
              cliClientID: argocd-cli
              clientID: argocd
              clientSecret: $oidc.keycloak.clientSecret
              logoutURL: http://${oidc_url}/realms/developer/protocol/openid-connect/logout?redirect_uri={{logoutRedirectURL}}
              requestedIDTokenClaims:
                groups:
                  essential: true
              requestedScopes:
                - openid
                - profile
                - email
                - groups

          rbacConfig:
            policy.csv: |
              g, Admin, role:admin
            policy.default: role:readonly

        repoServer:
          # Environment variables to pass to argocd-repo-server
          env:
            - name: TZ
              value: Europe/Paris
            - name: VAULT_ADDR
              value: http://vault-internal.vault.svc:8200
            - name: AVP_TYPE
              value: vault
            - name: AVP_AUTH_TYPE
              value: k8s
            - name: AVP_K8S_ROLE
              value: argocd
            - name: HELM_PLUGINS
              value: /custom-tools/helm-plugins/

          rbac:
            - apiGroups:
              - ""
              resources:
              - secrets
              - configmaps
              verbs:
              - get
              - list
              - watch

          volumes:
            - name: custom-tools
              emptyDir: {}

          initContainers:
            - name: download-tools
              image: alpine
              command: [sh, -c]
              env:
                - name: AVP_VERSION
                  value: "1.12.0"
                - name: VAULT_VERSION
                  value: "1.11.3"
              args:
                - |
                  mkdir -p /custom-tools/helm-plugins
                  echo "Install Vault plugin"
                  wget -qO /custom-tools/argocd-vault-plugin https://github.com/argoproj-labs/argocd-vault-plugin/releases/download/v$${AVP_VERSION}/argocd-vault-plugin_$${AVP_VERSION}_linux_amd64
                  echo "Install Vault cli"
                  wget -qO ./vault.zip https://releases.hashicorp.com/vault/$${VAULT_VERSION}/vault_$${VAULT_VERSION}_linux_amd64.zip && unzip ./vault.zip -d /custom-tools
                  # Correct permissions
                  chmod +x /custom-tools/*

              volumeMounts:
                - mountPath: /custom-tools
                  name: custom-tools

          volumeMounts:
            - name: custom-tools
              mountPath: /custom-tools
            - name: custom-tools
              mountPath: /usr/local/bin/argocd-vault-plugin
              subPath: argocd-vault-plugin

        configs:
          secret:
            extra:
                oidc.keycloak.clientSecret: ${oidc_secret}
  destination:
    server: https://kubernetes.default.svc
    namespace: argocd
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
