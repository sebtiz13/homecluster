---
# Source: common-app/templates/application.yaml
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: salamandre-argocd
  labels:    
    helm.sh/chart: common-app-0.0.1
    app.kubernetes.io/version: "0.0.1"
    app.kubernetes.io/managed-by: Helm
  annotations:
    sebtiz13.fr/host: argocd.sebtiz13.fr
spec:
  project: infrastructure
  source:
    repoURL: https://argoproj.github.io/argo-helm
    chart: argo-cd
    targetRevision: 5.16.7
    plugin:
      env:
        - name: HELM_RELEASE_NAME
          value: argocd
        - name: HELM_VALUES
          value: |
            applicationSet:
              enabled: false
            configs:
              params:
                server.insecure: true
              repositories:
                sebtiz13-repo:
                  type: helm
                  url: https://gitlab.com/api/v4/projects/40446088/packages/helm/stable
              secret:
                extra:
                  oidc.keycloak.clientSecret: <path:salamandre/data/argocd/oidc#clientSecret>
            dex:
              enabled: false
            extraObjects:
            - apiVersion: v1
              data:
                avp-helm.yaml: |2-
            
                  ---
                  apiVersion: argoproj.io/v1alpha1
                  kind: ConfigManagementPlugin
                  metadata:
                    name: argocd-vault-plugin-helm
                  spec:
                    version: "v1.13.1"
                    allowConcurrency: true
                    lockRepo: false
                    init:
                      command: [sh, -c, 'helm dependency update']
                    generate:
                      command:
                        - sh
                        - -c
                        - |
                          echo "$$ARGOCD_ENV_HELM_VALUES" > extra.values.yaml &&
                          helm template $${ARGOCD_ENV_HELM_RELEASE_NAME:-$${ARGOCD_APP_NAME}} --include-crds -n $$ARGOCD_APP_NAMESPACE $$ARGOCD_ENV_HELM_ARGS -f extra.values.yaml . |
                          argocd-vault-plugin generate -
                    discover:
                      find:
                        command:
                          - sh
                          - "-c"
                          - "find . -name 'Chart.yaml' && find . -name 'values.yaml'"
              kind: ConfigMap
              metadata:
                name: argocd-cmp-plugin
            - apiVersion: argoproj.io/v1alpha1
              kind: AppProject
              metadata:
                name: system
              spec:
                clusterResourceWhitelist:
                - group: '*'
                  kind: '*'
                description: System cluster critical apps
                destinations:
                - namespace: '*'
                  server: '*'
                sourceRepos:
                - '*'
            - apiVersion: argoproj.io/v1alpha1
              kind: AppProject
              metadata:
                name: infrastructure
              spec:
                clusterResourceWhitelist:
                - group: '*'
                  kind: '*'
                description: Infrastructure apps
                destinations:
                - namespace: '*'
                  server: '*'
                sourceRepos:
                - '*'
            - apiVersion: argoproj.io/v1alpha1
              kind: AppProject
              metadata:
                name: cloud
              spec:
                clusterResourceWhitelist:
                - group: '*'
                  kind: '*'
                description: Cloud apps
                destinations:
                - namespace: '*'
                  server: '*'
                sourceRepos:
                - '*'
            fullnameOverride: argocd
            global:
              logging:
                level: debug
            notifications:
              enabled: false
            repoServer:
              env:
              - name: TZ
                value: Europe/Paris
              extraContainers:
              - command:
                - /var/run/argocd/argocd-cmp-server
                env:
                - name: TZ
                  value: Europe/Paris
                - name: VAULT_ADDR
                  value: http://vault-internal.vault.svc:8200
                - name: AVP_TYPE
                  value: vault
                - name: AVP_AUTH_TYPE
                  value: k8s
                - name: AVP_K8S_ROLE
                  value: argocd
                image: quay.io/argoproj/argocd:v2.5.5
                name: avp-helm
                securityContext:
                  runAsNonRoot: true
                  runAsUser: 999
                volumeMounts:
                - mountPath: /var/run/argocd
                  name: var-files
                - mountPath: /home/argocd/cmp-server/plugins
                  name: plugins
                - mountPath: /tmp
                  name: cmp-tmp
                - mountPath: /home/argocd/cmp-server/config/plugin.yaml
                  name: cmp-plugin
                  subPath: avp-helm.yaml
                - mountPath: /usr/local/bin/argocd-vault-plugin
                  name: custom-tools
                  subPath: argocd-vault-plugin
              initContainers:
              - args:
                - |-
                  cd $(mktemp -d)
                  echo "Install Vault plugin"
                  wget -qO /custom-tools/argocd-vault-plugin https://github.com/argoproj-labs/argocd-vault-plugin/releases/download/v$${AVP_VERSION}/argocd-vault-plugin_$${AVP_VERSION}_linux_amd64
                  echo "Install Vault cli"
                  wget -qO ./vault.zip https://releases.hashicorp.com/vault/$${VAULT_VERSION}/vault_$${VAULT_VERSION}_linux_amd64.zip && unzip ./vault.zip -d /custom-tools
                  # Correct permissions
                  chmod +x /custom-tools/*
                command:
                - sh
                - -c
                env:
                - name: AVP_VERSION
                  value: 1.13.1
                - name: VAULT_VERSION
                  value: 1.12.2
                image: alpine
                name: download-tools
                securityContext:
                  runAsNonRoot: true
                  runAsUser: 999
                volumeMounts:
                - mountPath: /custom-tools
                  name: custom-tools
              rbac:
              - apiGroups:
                - ""
                resources:
                - secrets
                - configmaps
                verbs:
                - get
                - list
                - watch
              volumeMounts:
              - mountPath: /usr/local/bin/argocd-vault-plugin
                name: custom-tools
                subPath: argocd-vault-plugin
              volumes:
              - emptyDir: {}
                name: custom-tools
              - configMap:
                  name: argocd-cmp-plugin
                name: cmp-plugin
              - emptyDir: {}
                name: cmp-tmp
            server:
              config:
                oidc.config: |2
            
                  cliClientID: <path:salamandre/data/argocd/oidc#cliClientID>
                  clientID: <path:salamandre/data/argocd/oidc#clientID>
                  clientSecret: $$oidc.keycloak.clientSecret
                  issuer: <path:salamandre/data/argocd/oidc#issuer>
                  logoutURL: '<path:salamandre/data/argocd/oidc#issuer>/protocol/openid-connect/logout?client_id=<path:salamandre/data/argocd/oidc#clientID>&post_logout_redirect_uri={{logoutRedirectURL}}'
                  name: Keycloak
                  requestedIDTokenClaims:
                    groups:
                      essential: true
                  requestedScopes:
                  - openid
                  - profile
                  - email
                  - groups
                url: https://argocd.sebtiz13.fr
              env:
              - name: TZ
                value: Europe/Paris
              ingress:
                annotations:
                  traefik.ingress.kubernetes.io/router.entrypoints: web,websecure
                  traefik.ingress.kubernetes.io/router.middlewares: traefik-redirect-https@kubernetescrd
                enabled: true
                hosts:
                - argocd.sebtiz13.fr
                ingressClassName: traefik
                tls:
                - hosts:
                  - argocd.sebtiz13.fr
                  secretName: sebtiz13-fr-tls
              rbacConfig:
                policy.csv: |
                  g, Admin, role:admin
                policy.default: role:readonly
  destination:
    name: in-cluster
    namespace: argocd
  syncPolicy:
    automated: 
      prune: true
      selfHeal: true
